name: static website build and release

on:
    push:
      branches:
        - main
      paths-ignore:
        - 'README.md'

jobs:
    build:
        name: build image
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.0

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.0.0

            - name: Build Docker image
              run: |
                 docker build -t portfolio .
                 docker save portfolio > portfolio.tar

            - name: Upload Docker image artifact
              uses: actions/upload-artifact@v3.1.3
              with:
                name: portfolio.tar
                path: portfolio.tar

    test:
        name: test image
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.0

            - name: Download Docker image artifact
              uses: actions/download-artifact@v3
              with:
                name: portfolio.tar

            - name: Load Docker image
              run: docker load < portfolio.tar

            - name: Run Docker container
              run: docker run -d -p 80:80 -e PORT=80 portfolio

            - name: Wait for the container to be ready
              run: sleep 5

            - name: Test the container
              run: |
                curl "http://localhost" | grep "Hi! I'm Mohamed"
                if [ $? -eq 0 ]; then echo "Acceptance test succeed"; fi
        
    release:
        name: Push to Docker Hub
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.0

            - name: Download Docker image artifact
              uses: actions/download-artifact@v3
              with:
                name: portfolio.tar

            - name: Load Docker image
              run: docker load < portfolio.tar

            - name: Log in to Docker registry
              uses: docker/login-action@v2.2.0
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Tag and push Docker image
              run: |
                docker tag portfolio mozkadocker/portfolio
                docker push mozkadocker/portfolio

    production:
        name: Production
        runs-on: ubuntu-latest
        needs: release
        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.0
                
            - name: Deploy production to Heroku
              uses: akhileshNS/heroku-deploy@v3.12.14
              with:
                heroku_api_key: ${{secrets.HEROKU_API_KEY}}
                heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
                heroku_email: ${{secrets.HEROKU_EMAIL}}
                usedocker: true
                
            - name: Save Heroku URL app
              uses: akhileshNS/heroku-deploy@v3.12.14
              with:
                heroku_api_key: ${{secrets.HEROKU_API_KEY}}
                heroku_app_name: ""
                heroku_email: ${{secrets.HEROKU_EMAIL}}
                justlogin: true
            - run: |
                echo $(heroku apps:info --app $HEROKU_APP_NAME | grep Web | awk '{print $3}') > production-url.txt
                export PRODUCTION_URL=$(heroku apps:info --app $HEROKU_APP_NAME | grep Web | awk '{print $3}')
              env:
                heroku_app_name: ${{secrets.HEROKU_APP_NAME}}

            - name: Upload production URL as artifact
              uses: actions/upload-artifact@v3.1.3
              with:
                name: production-url
                path: production-url.txt

    test_prod:
        name: Test production
        runs-on: ubuntu-latest
        needs: production
        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.0

            - name: Download production URL artifact
              uses: actions/download-artifact@v3
              with:
                name: production-url
                path: .

            - name: Test the production environment
              run: |
                sleep 5
                curl $(cat production-url.txt) | grep "Hi! I'm Mohamed"
                if [ $? -eq 0 ]; then echo "Production test succeed"; fi